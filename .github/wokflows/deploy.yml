name: Build & Deploy React App to Azure Container Instance

on:
  push:
    branches:
      - main   # or your deploy branch

jobs:
  #runner
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - name: Checkout Code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/react-app
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

      # Log in to Azure
      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
            }

      - name: Delete existing ACI (if any)
        run: |
          az container delete \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_CONTAINER_NAME }} \
            --yes || true


      # Deploy to Azure Container Instance
      - name: Deploy to ACI
        run: |
          az container create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_CONTAINER_NAME }} \
            --image ${{ secrets.DOCKER_USERNAME }}/react-app:latest \
            --cpu 1 --memory 1 \
            --registry-login-server docker.io \
            --registry-username ${{ secrets.DOCKER_USERNAME }} \
            --registry-password ${{ secrets.DOCKER_PASSWORD }} \
            --ports 80 \
            --restart-policy Always \
            --os-type Linux \
            --ip-address Public \
            --dns-name-label ${{ secrets.ACI_DNS_LABEL }} \
            --environment-variables NODE_ENV=production